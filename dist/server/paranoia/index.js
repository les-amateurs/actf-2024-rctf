"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.submit = exports.visit = exports.register = void 0;
const server_1 = __importDefault(require("../config/server"));
const PURL = (_a = server_1.default.paranoia) === null || _a === void 0 ? void 0 : _a.apiUrl;
const convertUserToParaTeam = (team, ip) => {
    return {
        id: team.id,
        name: team.id,
        email: team.email,
        division: team.division,
        ctftime_id: team.ctftimeId,
        ip
    };
};
exports.register = async (team, ip) => {
    if (!PURL)
        return;
    await fetch(`${PURL}/teams`, {
        method: 'POST',
        body: JSON.stringify(convertUserToParaTeam(team, ip))
    });
};
exports.visit = async (team, ip, ua) => {
    if (!PURL)
        return;
    await fetch(`${PURL}/users/visit`, {
        method: 'POST',
        body: JSON.stringify({
            ip,
            ua,
            team_id: team.id
        })
    });
};
exports.submit = async (team, ip, chall, flag, accepted) => {
    if (!PURL)
        return;
    await fetch(`${PURL}/submissions`, {
        method: 'POST',
        body: JSON.stringify({ team_id: team.id, ip, chall, flag, accepted })
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zZXJ2ZXIvcGFyYW5vaWEvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBLDhEQUFxQztBQUdyQyxNQUFNLElBQUksU0FBRyxnQkFBTSxDQUFDLFFBQVEsMENBQUUsTUFBTSxDQUFBO0FBRXBDLE1BQU0scUJBQXFCLEdBQUcsQ0FBQyxJQUFVLEVBQUUsRUFBVSxFQUFZLEVBQUU7SUFDakUsT0FBTztRQUNMLEVBQUUsRUFBRSxJQUFJLENBQUMsRUFBRTtRQUNYLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRTtRQUNiLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztRQUNqQixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7UUFDdkIsVUFBVSxFQUFFLElBQUksQ0FBQyxTQUFTO1FBQzFCLEVBQUU7S0FDSCxDQUFBO0FBQ0gsQ0FBQyxDQUFBO0FBRVksUUFBQSxRQUFRLEdBQUcsS0FBSyxFQUFFLElBQVUsRUFBRSxFQUFVLEVBQWlCLEVBQUU7SUFDdEUsSUFBSSxDQUFDLElBQUk7UUFBRSxPQUFNO0lBQ2pCLE1BQU0sS0FBSyxDQUFDLEdBQUcsSUFBSSxRQUFRLEVBQUU7UUFDM0IsTUFBTSxFQUFFLE1BQU07UUFDZCxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7S0FDdEQsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFBO0FBRVksUUFBQSxLQUFLLEdBQUcsS0FBSyxFQUN4QixJQUFVLEVBQ1YsRUFBVSxFQUNWLEVBQVUsRUFDSyxFQUFFO0lBQ2pCLElBQUksQ0FBQyxJQUFJO1FBQUUsT0FBTTtJQUNqQixNQUFNLEtBQUssQ0FBQyxHQUFHLElBQUksY0FBYyxFQUFFO1FBQ2pDLE1BQU0sRUFBRSxNQUFNO1FBQ2QsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDbkIsRUFBRTtZQUNGLEVBQUU7WUFDRixPQUFPLEVBQUUsSUFBSSxDQUFDLEVBQUU7U0FDakIsQ0FBQztLQUNILENBQUMsQ0FBQTtBQUNKLENBQUMsQ0FBQTtBQUVZLFFBQUEsTUFBTSxHQUFHLEtBQUssRUFDekIsSUFBVSxFQUNWLEVBQVUsRUFDVixLQUFhLEVBQ2IsSUFBWSxFQUNaLFFBQWlCLEVBQ0YsRUFBRTtJQUNqQixJQUFJLENBQUMsSUFBSTtRQUFFLE9BQU07SUFDakIsTUFBTSxLQUFLLENBQUMsR0FBRyxJQUFJLGNBQWMsRUFBRTtRQUNqQyxNQUFNLEVBQUUsTUFBTTtRQUNkLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLENBQUM7S0FDdEUsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBQYXJhVGVhbSB9IGZyb20gJy4vdHlwZXMnXG5pbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZy9zZXJ2ZXInXG5pbXBvcnQgdHlwZSB7IFVzZXIgfSBmcm9tICdzZXJ2ZXIvZGF0YWJhc2UvdXNlcnMnXG5cbmNvbnN0IFBVUkwgPSBjb25maWcucGFyYW5vaWE/LmFwaVVybFxuXG5jb25zdCBjb252ZXJ0VXNlclRvUGFyYVRlYW0gPSAodGVhbTogVXNlciwgaXA6IHN0cmluZyk6IFBhcmFUZWFtID0+IHtcbiAgcmV0dXJuIHtcbiAgICBpZDogdGVhbS5pZCxcbiAgICBuYW1lOiB0ZWFtLmlkLFxuICAgIGVtYWlsOiB0ZWFtLmVtYWlsLFxuICAgIGRpdmlzaW9uOiB0ZWFtLmRpdmlzaW9uLFxuICAgIGN0ZnRpbWVfaWQ6IHRlYW0uY3RmdGltZUlkLFxuICAgIGlwXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyID0gYXN5bmMgKHRlYW06IFVzZXIsIGlwOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgaWYgKCFQVVJMKSByZXR1cm5cbiAgYXdhaXQgZmV0Y2goYCR7UFVSTH0vdGVhbXNgLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoY29udmVydFVzZXJUb1BhcmFUZWFtKHRlYW0sIGlwKSlcbiAgfSlcbn1cblxuZXhwb3J0IGNvbnN0IHZpc2l0ID0gYXN5bmMgKFxuICB0ZWFtOiBVc2VyLFxuICBpcDogc3RyaW5nLFxuICB1YTogc3RyaW5nXG4pOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgaWYgKCFQVVJMKSByZXR1cm5cbiAgYXdhaXQgZmV0Y2goYCR7UFVSTH0vdXNlcnMvdmlzaXRgLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgaXAsXG4gICAgICB1YSxcbiAgICAgIHRlYW1faWQ6IHRlYW0uaWRcbiAgICB9KVxuICB9KVxufVxuXG5leHBvcnQgY29uc3Qgc3VibWl0ID0gYXN5bmMgKFxuICB0ZWFtOiBVc2VyLFxuICBpcDogc3RyaW5nLFxuICBjaGFsbDogc3RyaW5nLFxuICBmbGFnOiBzdHJpbmcsXG4gIGFjY2VwdGVkOiBib29sZWFuXG4pOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgaWYgKCFQVVJMKSByZXR1cm5cbiAgYXdhaXQgZmV0Y2goYCR7UFVSTH0vc3VibWlzc2lvbnNgLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyB0ZWFtX2lkOiB0ZWFtLmlkLCBpcCwgY2hhbGwsIGZsYWcsIGFjY2VwdGVkIH0pXG4gIH0pXG59XG4iXX0=